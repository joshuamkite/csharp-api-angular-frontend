name: Loan Management System CI/CD

on:
  push:
    branches: [ '**' ]  # Run on push to any branch
  workflow_dispatch:    # Allow manual triggering

jobs:
  # API Tests
  test-api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    outputs:
      status: ${{ job.status }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal

  # Frontend Tests
  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    outputs:
      status: ${{ job.status }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: ./frontend/package-lock.json
    - name: Install dependencies
      run: npm ci
    - name: Run tests
      run: npm test -- --watch=false --browsers=ChromeHeadless

  # API Build & Push to ECR
  build-api:
    needs: test-api
    if: ${{ needs.test-api.outputs.status == 'success' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch') }}
    uses: ./.github/workflows/docker-build-push.yml
    permissions:
      id-token: write
      contents: read
    with:
      working-directory: './api'
      ecr-repository: 'loan-management-api'
      aws-region: ${{ vars.AWS_REGION }}
      role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}

  # Frontend Build & Push to ECR
  build-frontend:
    needs: test-frontend
    if: ${{ needs.test-frontend.outputs.status == 'success' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch') }}
    uses: ./.github/workflows/docker-build-push.yml
    permissions:
      id-token: write
      contents: read
    with:
      working-directory: './frontend'
      ecr-repository: 'loan-management-frontend'
      aws-region: ${{ vars.AWS_REGION }}
      role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}