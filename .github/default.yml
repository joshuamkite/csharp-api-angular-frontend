name: Loan Management System CI/CD

on:
  push:
    branches: ["**"] # Run on push to any branch
  workflow_dispatch: # Allow manual triggering

jobs:
  test-api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --configuration Release --no-build --verbosity normal

  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: ./frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --watch=false --browsers=ChromeHeadless

  build-and-publish:
    # Only run this job if tests passed AND (branch is master OR this is a manual workflow run)
    needs: [test-api, test-frontend]
    if: ${{ success() && (github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch') }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker images
        run: docker-compose build

      - name: Run integration tests
        run: |
          docker-compose up -d

          # Wait for API to be healthy
          echo "Waiting for API to be ready..."
          timeout 60s bash -c 'until curl -s http://localhost:9090/health; do sleep 2; done'

          # Verify frontend is running
          echo "Verifying frontend is running..."
          curl -s http://localhost:80 | grep -q "Loan Management" && echo "Frontend verified" || echo "Frontend verification failed"

          # Shutdown containers after testing
          docker-compose down

      # Here you would add steps to push images to your registry
      # Example (commented out):
      # - name: Login to container registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: your-registry.example.com
      #     username: ${{ secrets.REGISTRY_USERNAME }}
      #     password: ${{ secrets.REGISTRY_PASSWORD }}

      # - name: Tag and push API image
      #   run: |
      #     docker tag loan-management-api:latest your-registry.example.com/loan-management-api:${{ github.sha }}
      #     docker tag loan-management-api:latest your-registry.example.com/loan-management-api:latest
      #     docker push your-registry.example.com/loan-management-api:${{ github.sha }}
      #     docker push your-registry.example.com/loan-management-api:latest

      # - name: Tag and push Frontend image
      #   run: |
      #     docker tag loan-management-frontend:latest your-registry.example.com/loan-management-frontend:${{ github.sha }}
      #     docker tag loan-management-frontend:latest your-registry.example.com/loan-management-frontend:latest
      #     docker push your-registry.example.com/loan-management-frontend:${{ github.sha }}
      #     docker push your-registry.example.com/loan-management-frontend:latest

      - name: Publish Build Status
        run: echo "ðŸš€ Build successful! Images are ready for deployment."
